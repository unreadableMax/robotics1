*
*  MUSCOD-II Results File
*

*
*  KKT tolerance
*

kktt
  9.9999999999999995E-07


*
*  objective
*

obj
  5.0137819169779185E-01


*
*  grid
*

t(0,0)  ! 0
  0.0000000000000000E+00

t(0,1)  ! 1
  6.6666666666666666E-02

t(0,2)  ! 2
  1.3333333333333333E-01

t(0,3)  ! 3
  2.0000000000000001E-01

t(0,4)  ! 4
  2.6666666666666666E-01

t(0,5)  ! 5
  3.3333333333333331E-01

t(0,6)  ! 6
  3.9999999999999997E-01

t(0,7)  ! 7
  4.6666666666666662E-01

t(0,8)  ! 8
  5.3333333333333333E-01

t(0,9)  ! 9
  5.9999999999999998E-01

t(0,10)  ! 10
  6.6666666666666663E-01

t(0,11)  ! 11
  7.3333333333333328E-01

t(0,12)  ! 12
  7.9999999999999993E-01

t(0,13)  ! 13
  8.6666666666666659E-01

t(0,14)  ! 14
  9.3333333333333324E-01

t(0,15)  ! 15
  1.0000000000000000E+00


*
*  variables
*

h
  0:   1.0000000000000000E+00


sd(0,0)  ! 0
  0:  -5.8273098986199270E-02
  1:   1.0000000000000000E+00

sd(0,1)  ! 1
  0:  -1.4517148180988648E-02
  1:   3.0837770315688129E-01

sd(0,2)  ! 2
  0:  -8.0855709873733916E-06
  1:   7.9043090914285408E-02

sd(0,3)  ! 3
  0:   4.8030516564779996E-03
  1:   2.9993624156938736E-03

sd(0,4)  ! 4
  0:   6.3986085172689777E-03
  1:  -2.2211930990248208E-02

sd(0,5)  ! 5
  0:   6.9283780461535244E-03
  1:  -3.0559534689077905E-02

sd(0,6)  ! 6
  0:   7.1061517085715120E-03
  1:  -3.3290694774132268E-02

sd(0,7)  ! 7
  0:   7.1714550286283846E-03
  1:  -3.4085273205316291E-02

sd(0,8)  ! 8
  0:   7.2122756032960561E-03
  1:  -3.4013852909199560E-02

sd(0,9)  ! 9
  0:   7.2836127192647537E-03
  1:  -3.2980201499636097E-02

sd(0,10)  ! 10
  0:   7.4815838480348090E-03
  1:  -2.9591619971784944E-02

sd(0,11)  ! 11
  0:   8.0729279992069053E-03
  1:  -1.9282458277119607E-02

sd(0,12)  ! 12
  0:   9.8544005140479146E-03
  1:   1.1837468582237554E-02

sd(0,13)  ! 13
  0:   1.5226291882881687E-02
  1:   1.0569800453640310E-01

sd(0,14)  ! 14
  0:   3.1426490796829958E-02
  1:   3.8876338072744376E-01

sd(0,15)  ! 15
  0:   8.0282549007490600E-02
  1:   1.2424254629542650E+00


*
*  residuals
*

ccxd(0,0)  ! 0 -> 1
  0:   1.2085418900987938E-03
  1:   1.6705544180899512E-01

ccxd(0,1)  ! 1 -> 2
  0:   1.7461781576063842E-03
  1:   1.4043497441605612E-01

ccxd(0,2)  ! 2 -> 3
  0:   1.3776150373987391E-03
  1:   1.1885740549709957E-01

ccxd(0,3)  ! 3 -> 4
  0:   1.2509557962151561E-03
  1:   1.1163609502209264E-01

ccxd(0,4)  ! 4 -> 5
  0:   1.2103964098584847E-03
  1:   1.0927901568536676E-01

ccxd(0,5)  ! 5 -> 6
  0:   1.1971099707620350E-03
  1:   1.0849792292610165E-01

ccxd(0,6)  ! 6 -> 7
  0:   1.1925232451326546E-03
  1:   1.0822295294425978E-01

ccxd(0,7)  ! 7 -> 8
  0:   1.1903743815040793E-03
  1:   1.0808151835964232E-01

ccxd(0,8)  ! 8 -> 9
  0:   1.1877609827595989E-03
  1:   1.0788285291102920E-01

ccxd(0,9)  ! 9 -> 10
  0:   1.1811648527782301E-03
  1:   1.0735951831230994E-01

ccxd(0,10)  ! 10 -> 11
  0:   1.1617505389525714E-03
  1:   1.0580889221145877E-01

ccxd(0,11)  ! 11 -> 12
  0:   1.1038622555213651E-03
  1:   1.0116627469055574E-01

ccxd(0,12)  ! 12 -> 13
  0:   9.3495760279644832E-04
  1:   8.7449518310692226E-02

ccxd(0,13)  ! 13 -> 14
  0:   5.0171033420069039E-04
  1:   5.0059978805377048E-02

ccxd(0,14)  ! 14 -> 15
  0:   6.3297725236881319E-04
  1:   1.7688031000573368E-02


rde(0,0)  ! 0
  0:   0.0000000000000000E+00

rde(0,15)  ! 15
  0:   1.0000000000000000E+00


*
*  multipliers
*

mul.ccxd(0,0)  ! 0 -> 1
  0:  -1.0634903171081922E+00
  1:   8.1970652560884191E-02

mul.ccxd(0,1)  ! 1 -> 2
  0:  -1.6382525613029002E+00
  1:   7.9882582617080811E-02

mul.ccxd(0,2)  ! 2 -> 3
  0:  -1.9121321830402804E+00
  1:   7.3918278092997849E-02

mul.ccxd(0,3)  ! 3 -> 4
  0:  -2.0305210322555842E+00
  1:   7.0189860854971864E-02

mul.ccxd(0,4)  ! 4 -> 5
  0:  -2.0787924804782270E+00
  1:   6.8365884599749113E-02

mul.ccxd(0,5)  ! 5 -> 6
  0:  -2.0974377181307142E+00
  1:   6.7546694625189807E-02

mul.ccxd(0,6)  ! 6 -> 7
  0:  -2.1035470698101917E+00
  1:   6.7151327073201858E-02

mul.ccxd(0,7)  ! 7 -> 8
  0:  -2.1030154035430360E+00
  1:   6.6839116078065988E-02

mul.ccxd(0,8)  ! 8 -> 9
  0:  -2.0953364156891419E+00
  1:   6.6309443089228037E-02

mul.ccxd(0,9)  ! 9 -> 10
  0:  -2.0732034089352447E+00
  1:   6.5058429245863483E-02

mul.ccxd(0,10)  ! 10 -> 11
  0:  -2.0167600778029060E+00
  1:   6.1982683559240762E-02

mul.ccxd(0,11)  ! 11 -> 12
  0:  -1.8802731744213890E+00
  1:   5.4677040564710538E-02

mul.ccxd(0,12)  ! 12 -> 13
  0:  -1.5713604120737643E+00
  1:   3.8536966337069253E-02

mul.ccxd(0,13)  ! 13 -> 14
  0:  -9.4982202144830230E-01
  1:   7.6131679851455386E-03

mul.ccxd(0,14)  ! 14 -> 15
  0:  -1.0636865994091426E-02
  1:  -3.2119647356482144E-02


mul.rde(0,0)  ! 0
  0:   0.0000000000000000E+00

mul.rde(0,15)  ! 15
  0:   0.0000000000000000E+00


*  multipliers for bounds
*    FR  ...  variable (usually strictly) between bounds
*    LO  ...  variable at lower bound
*    UP  ...  variable at upper bound
*    XX  ...  variable not contained in NLP problem

mul.h
  0:   0.0000000000000000E+00  ! XX


mul.sd(0,0)  ! 0
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,1)  ! 1
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,2)  ! 2
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,3)  ! 3
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,4)  ! 4
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,5)  ! 5
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,6)  ! 6
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,7)  ! 7
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,8)  ! 8
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,9)  ! 9
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,10)  ! 10
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,11)  ! 11
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,12)  ! 12
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,13)  ! 13
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,14)  ! 14
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR

mul.sd(0,15)  ! 15
  0:   0.0000000000000000E+00  ! FR
  1:   0.0000000000000000E+00  ! FR


